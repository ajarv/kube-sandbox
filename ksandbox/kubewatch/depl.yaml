apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2019-08-20T15:42:46Z"
  generation: 4
  labels:
    app: kubewatch
    chart: kubewatch-0.8.5
    heritage: Tiller
    release: kubewatch
  name: kubewatch
  namespace: default
  resourceVersion: "3529"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/kubewatch
  uid: 27fc7e1b-c361-11e9-954f-0242ac110059
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kubewatch
      release: kubewatch
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kubewatch
        chart: kubewatch-0.8.5
        release: kubewatch
    spec:
      containers:
      - image: docker.io/bitnami/kubewatch:0.0.4-debian-9-r269
        imagePullPolicy: Always
        name: kubewatch
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/bitnami/kubewatch/.kubewatch.yaml
          name: kubewatch-config-map
          subPath: .kubewatch.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kubewatch
      serviceAccountName: kubewatch
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: kubewatch-config
        name: kubewatch-config-map
